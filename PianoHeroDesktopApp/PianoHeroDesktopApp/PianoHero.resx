<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="play.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AILAhE0nSkkngAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOSSURBVHhe
        5dvZyw1xHMfxEa4QslyK3CP8GYgspUS5cGu5s4RyIcS9JMlWbiz3Qu6s2S5JKft6h7K8P5M5nec83zln
        zvyW+c3zfOpVT3NmO2dmfjO/33yfLELmYi0O4BIe4CW+4Nd/+lvT9NlF7IeWmYNWZjlO4Cn+4G9NWvYJ
        jmMpks407MJzWF/Gh2fYialIJjNxEJ9h7XQIn6DLZAYaywRsxntYOxmDfvRt0L5EzULcgbVTTbiNBYiS
        1VCrbe1Ik75jA4JFp9kxWBtPhe4ah+H9kpiE07A2mqJzmAwv0Yquw9pQyq5BB84pOpXOwNpAG5yH0+WQ
        +jVfhdqEWlkHa4Vto4ZxDYaK7vPfYK2wjb6i8nOCrpmUHnJ8uYlK7cFWWCsYCzahb9Sx+QBr4brWw/c6
        63qH6SiNenXWgi4U/bAnYX0e216YmYKPsBZy0Z2VeANrvljUlTbHEzSYYS3gqjca5roMa95YdmBUNHxl
        zeyqLE2eDRpZGhGN4Vkz+tAvTbYNS9CJBjCtmXyokibuFEfRSajTX6om9tnwCHk0bu8ydD3IsInVNug7
        z0b+AsKawZc6iXWnyDtJemNjfeiLS0KfDfuQv4qyPvTFNSHbBg2dZfe7JoTgKyHuFHeRveqaEILP+D4b
        9EI2+CutEPHVNqjvk/3smhBCqPg4G36gtT+Aj1tl/gO08RLw1SDml0CbGkHfD0h5Izjub4OpPwiFfCzO
        H4RSfhQO3U3OH4XHfWdIG0upOxxrcOQ38u6wolI0ayYfqibWUS88RCeqw7Nm8qFKYh31bkfQyTJYM/nQ
        L7GPerdFGJFQl0FZmjjqBY2BjooqMK2ZXfWmyaNe2I5RifFqrMmjXih9Naao/NRayIWSwlEv7EZpVHvr
        u/Q1haNe0CCKirr7ZgushceCjRgYlZGo9tZaQZvdQOXMQ8zy99BU2zwfQ2UFQvYRYtF3UIF3rajI0Fpp
        mxxC7ag9aFORdC8NeDiVyioqOL4KawMpuwLnYukiE3EK1oZSdBbeyuWL6FRSm5Byw6h90zXvfNr3yyqk
        eItUbbMKvKNE99RbsHakCXrI0bNL9Ogl5WtYOxXDW+hf94Ke8oOi2lsNL4foSpdR52oPBnZsYkZ9bFVg
        hhxgfQwNZmjsIumoCFF1eCpF0/Cz9WWq0LIavdUA5mK0Mhp71wsIXSYXcA8voDuJXs2L/tY0faZ/dNK8
        WmYWAibL/gGJQf/rgrjqGgAAAABJRU5ErkJggg==
</value>
  </data>
</root>